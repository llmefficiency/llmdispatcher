name: Update Badges

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  update-badges:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    
    - name: Run tests with coverage
      id: coverage
      run: |
        go test -v -coverprofile=coverage.out ./...
        COVERAGE=$(go tool cover -func=coverage.out | tail -1 | awk '{print $3}' | sed 's/%//')
        echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
        echo "Coverage: $COVERAGE%"
    
    - name: Run golangci-lint
      id: lint
      run: |
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
        if golangci-lint run; then
          echo "lint_status=passing" >> $GITHUB_OUTPUT
        else
          echo "lint_status=failing" >> $GITHUB_OUTPUT
        fi
    
    - name: Build project
      id: build
      run: |
        if go build ./apps/cli/cli.go; then
          echo "build_status=passing" >> $GITHUB_OUTPUT
        else
          echo "build_status=failing" >> $GITHUB_OUTPUT
        fi
    
    - name: Display results
      run: |
        COVERAGE=${{ steps.coverage.outputs.coverage }}
        LINT_STATUS=${{ steps.lint.outputs.lint_status }}
        BUILD_STATUS=${{ steps.build.outputs.build_status }}
        
        echo "=== Test Results ==="
        echo "Coverage: ${COVERAGE}%"
        echo "Lint Status: ${LINT_STATUS}"
        echo "Build Status: ${BUILD_STATUS}"
        echo "===================" 